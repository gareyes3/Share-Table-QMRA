#Setting Working Directory-------------------------------------
#setwd("C:/Users/gareyes3/Documents/GitHub/Share-Table-QMRA/R")
setwd("C:/Users/Gustavo Reyes/Documents/GitHubFiles/Share Table QMRA/Share-Table-QMRA/R")
pathfolder<-"NRSA_CSV_Files"
#Opening Libary and Inputs-------------------------------------
source("Util_Library.R")
source("Functions_Full_Analysis.R")
source("Util_FunctionFoodWaste.R")
load("C:/Users/Gustavo Reyes/Box/Share Table Project/QMRA Files/QMRA Paper/Final R Data Files/NRSA 5-15.RData")
#Opening Libary and Inputs-------------------------------------
source("Util_Library.R")
source("Functions_Full_Analysis.R")
source("Util_FunctionFoodWaste.R")
#Opening Libary and Inputs-------------------------------------
source("Util_Library.R")
source("Functions_Full_Analysis.R")
source("Util_FunctionFoodWaste.R")
library(ggplot2)
library(ggpattern)
TornadoFull<-ggplot(data = FullSA, aes(x=reorder(Description,abs(Index)),y=Index, fill = Input_Category ))+
geom_bar(stat = "identity", position = "identity")+
ylab("Sensitivity Index")+
xlab("Input Name")+
ggtitle("Nominal Range Sensitivity Analysis: Effect on mean illness prevalence")+
Label_v +
coord_flip()+
theme(plot.title = element_text(hjust = 0.5, size = 10))+
scale_y_continuous(n.breaks = 10)+
scale_fill_grey()+
labs(fill= "Input Category")
DFCheckingInputsx<-DFCheckingInputs[1:9,]
FullSA<-rbind(DFCheckingInputsx,SenstivityDF)
FullSA$Index<-as.numeric(FullSA$Index)
round(FullSA$Index, 3)
description_color<-c("Reduction",
"Amplification",
"Reduction",
"Reduction",
"Behavioral",
"Behavioral",
"Behavioral",
"Behavioral",
"Behavioral",
"Contamination",
"Contamination",
"Reduction",
"Behavioral",
"Contamination",
"Contamination",
"Contamination",
"Contamination",
"Contamination",
"Behavioral",
"Reduction")
Label_v = scale_x_discrete(labels=c("mass_feces_hands"="Mass of Feces Hands",
"TrP_H_S"= "Transfer Prob Hand - Surface",
"TrP_H_F"="Transfer Prob Hand - Food",
"TrP_F_H"= "Transfer Prob Food-Hand",
"TrP_S_H"= "Transfer Prob Surface-Hand",
"Prevalence_Illness"="Illness Prevalence",
"N_Touched"="Additional Touches When Choosing Fruit",
"LogRedWash"="Hand Washing Efficacy Baseline",
"HU_NV_in_Feces"="Norovirus GEC in Feces",
"PrWashingHands" = 'Probability of Washing Hands',
"Reduction_wash"= "Fruit Wash Efficacy",
"Growth_Time"= "Die Off length (h)",
"Ill Exclusion" = "% of Ill Students Excluded from Share Table",
"Hand Sanitizer" = "Hand Sanitizer Station 100% Compliance",
"HanwashingStationEfficacy"= "Hanwashing Station 100% Compliance",
"Probability of Sharing" = "Probability of Sharing",
"Probability of Eat ST"="Probability of Eat ST",
"Probability of Pick ST" = "Probability of Pick ST",
"Probability of Pick Selection" = "Probability of Pick Selection",
"Probability of Eat Selection" = "Probability of Eat Selection"))
FullSA$Input_Category<-description_color
install.packages("remotes")
install.packages("remotes")
remotes::install_github("coolbutuseless/ggpattern")
library(ggplot2)
library(ggpattern)
TornadoFull<-ggplot(data = FullSA, aes(x=reorder(Description,abs(Index)),y=Index, fill = Input_Category ))+
geom_bar(stat = "identity", position = "identity")+
ylab("Sensitivity Index")+
xlab("Input Name")+
ggtitle("Nominal Range Sensitivity Analysis: Effect on mean illness prevalence")+
Label_v +
coord_flip()+
theme(plot.title = element_text(hjust = 0.5, size = 10))+
scale_y_continuous(n.breaks = 10)+
scale_fill_grey()+
labs(fill= "Input Category")
ggplot(data = FullSA,aes(x=reorder(Description,abs(Index)),y=Index))+
geom_col_pattern(aes(pattern = Input_Category, pattern_angle =  Input_Category, pattern_spacing =  Input_Category),
fill            = 'white',
colour          = 'black',
pattern_density = 0.2,
pattern_fill    = 'black',
pattern_colour  = 'black'
)+
scale_pattern_spacing_discrete(range = c(0.01, 0.02)) +
ylab("Sensitivity Index")+
xlab("Input Name")+
ggtitle("Nominal Range Sensitivity Analysis: Effect on mean illness prevalence")+
Label_v +
coord_flip()+
theme(plot.title = element_text(hjust = 0.5, size = 10))+
scale_y_continuous(n.breaks = 10)+
scale_color_grey(start = 0.0,end = 0.7)+
labs(fill= "Input Category")
TornadoFull<-ggplot(data = FullSA, aes(x=reorder(Description,abs(Index)),y=Index, fill = Input_Category ))+
geom_bar(stat = "identity", position = "identity")+
ylab("Sensitivity Index")+
xlab("Input Name")+
ggtitle("Nominal Range Sensitivity Analysis: Effect on mean illness prevalence")+
Label_v +
coord_flip()+
theme(plot.title = element_text(hjust = 0.5, size = 10))+
scale_y_continuous(n.breaks = 10)+
scale_fill_grey()+
labs(fill= "Input Category")
TornadoFull
TornadoFull
TornadoFull<-ggplot(data = FullSA, aes(x=reorder(Description,abs(Index)),y=Index, fill = Input_Category ))+
geom_bar(stat = "identity", position = "identity")+
ylab("Sensitivity Index")+
xlab("Input Name")+
ggtitle("Nominal Range Sensitivity Analysis: Effect on mean illness prevalence")+
Label_v +
coord_flip()+
theme(plot.title = element_text(hjust = 0.5, size = 10))+
scale_y_continuous(n.breaks = 10)+
scale_fill_grey()+
labs(fill= "Input Category")
library(ggplot2)
TornadoFull<-ggplot(data = FullSA, aes(x=reorder(Description,abs(Index)),y=Index, fill = Input_Category ))+
geom_bar(stat = "identity", position = "identity")+
ylab("Sensitivity Index")+
xlab("Input Name")+
ggtitle("Nominal Range Sensitivity Analysis: Effect on mean illness prevalence")+
Label_v +
coord_flip()+
theme(plot.title = element_text(hjust = 0.5, size = 10))+
scale_y_continuous(n.breaks = 10)+
scale_fill_grey()+
labs(fill= "Input Category")
TornadoFull
ggplot(data = FullSA,aes(x=reorder(Description,abs(Index)),y=Index))+
geom_col_pattern(aes(pattern = Input_Category, pattern_angle =  Input_Category, pattern_spacing =  Input_Category),
fill            = 'white',
colour          = 'black',
pattern_density = 0.2,
pattern_fill    = 'black',
pattern_colour  = 'black'
)+
scale_pattern_spacing_discrete(range = c(0.01, 0.02)) +
ylab("Sensitivity Index")+
xlab("Input Name")+
ggtitle("Nominal Range Sensitivity Analysis: Effect on mean illness prevalence")+
Label_v +
coord_flip()+
theme(plot.title = element_text(hjust = 0.5, size = 10))+
scale_y_continuous(n.breaks = 10)+
scale_color_grey(start = 0.0,end = 0.7)+
labs(fill= "Input Category")
